<!-- Entry point for using OpenNI devices -->
<launch>

  <!-- "camera" should uniquely identify the device. All topics are pushed down
   into the "camera" namespace, and it is prepended to tf frame ids. -->
   <arg name="camera" default="kinect" />
   <arg name="publish_tf" default="true" />

   <arg name="tf_prefix"           default="$(arg camera)"/>
   <arg name="external_manager"    default="false"/>
   <arg name="manager"             default="realsense2_camera_manager"/>

   <!-- Camera device specific arguments -->

   <arg name="serial_no"           default=""/>
   <arg name="json_file_path"      default=""/>

   <arg name="fisheye_width"       default="640"/>
   <arg name="fisheye_height"      default="480"/>
   <arg name="enable_fisheye"      default="false"/>

   <arg name="depth_width"         default="640"/>
   <arg name="depth_height"        default="480"/>
   <arg name="enable_depth"        default="true"/>

   <arg name="infra_width"         default="640"/>
   <arg name="infra_height"        default="480"/>
   <arg name="enable_infra1"       default="false"/>
   <arg name="enable_infra2"       default="false"/>

   <arg name="color_width"         default="640"/>
   <arg name="color_height"        default="480"/>
   <arg name="enable_color"        default="false"/>

   <arg name="fisheye_fps"         default="30"/>
   <arg name="depth_fps"           default="30"/>
   <arg name="infra_fps"           default="30"/>
   <arg name="color_fps"           default="30"/>
   <arg name="gyro_fps"            default="400"/>
   <arg name="accel_fps"           default="250"/>
   <arg name="enable_gyro"         default="false"/>
   <arg name="enable_accel"        default="false"/>

   <arg name="enable_pointcloud"   default="false"/>
   <arg name="enable_sync"         default="true"/>
   <arg name="align_depth"         default="true"/>
   <arg name="filters"             default=""/>

   <!-- rgbd_launch specific arguments -->

   <!-- Arguments for remapping all device namespaces -->
   <arg name="rgb"                             default="color" />
   <arg name="ir"                              default="infra1" />
   <arg name="depth"                           default="depth" />
   <arg name="depth_registered_pub"            default="depth_registered" />
   <arg name="depth_registered"                default="depth_registered" unless="$(arg align_depth)" />
   <arg name="depth_registered"                default="aligned_depth_to_color" if="$(arg align_depth)" />
   <arg name="depth_registered_filtered"       default="$(arg depth_registered)" />
   <arg name="projector"                       default="projector" />

   <!-- Disable bond topics by default -->
   <arg name="bond"                            default="false" />
   <arg name="respawn"                         default="$(arg bond)" />

   <!-- Processing Modules -->
   <arg name="rgb_processing"                  default="true"/>
   <arg name="debayer_processing"              default="false" />
   <arg name="ir_processing"                   default="false"/>
   <arg name="depth_processing"                default="false"/>
   <arg name="depth_registered_processing"     default="true"/>
   <arg name="disparity_processing"            default="false"/>
   <arg name="disparity_registered_processing" default="false"/>
   <arg name="hw_registered_processing"        default="$(arg align_depth)" />
   <arg name="sw_registered_processing"        default="true" unless="$(arg align_depth)" />
   <arg name="sw_registered_processing"        default="false" if="$(arg align_depth)" />

   <group ns="$(arg camera)">

     <!-- Launch the camera device nodelet-->
     <include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">
       <arg name="external_manager"         value="$(arg external_manager)"/>
       <arg name="manager"                  value="$(arg manager)"/>
       <arg name="tf_prefix"                value="$(arg tf_prefix)"/>
       <arg name="serial_no"                value="$(arg serial_no)"/>
       <arg name="json_file_path"           value="$(arg json_file_path)"/>

       <arg name="enable_pointcloud"        value="$(arg enable_pointcloud)"/>
       <arg name="enable_sync"              value="$(arg enable_sync)"/>
       <arg name="align_depth"              value="$(arg align_depth)"/>

       <arg name="fisheye_width"            value="$(arg fisheye_width)"/>
       <arg name="fisheye_height"           value="$(arg fisheye_height)"/>
       <arg name="enable_fisheye"           value="$(arg enable_fisheye)"/>

       <arg name="depth_width"              value="$(arg depth_width)"/>
       <arg name="depth_height"             value="$(arg depth_height)"/>
       <arg name="enable_depth"             value="$(arg enable_depth)"/>

       <arg name="color_width"              value="$(arg color_width)"/>
       <arg name="color_height"             value="$(arg color_height)"/>
       <arg name="enable_color"             value="$(arg enable_color)"/>

       <arg name="infra_width"              value="$(arg infra_width)"/>
       <arg name="infra_height"             value="$(arg infra_height)"/>
       <arg name="enable_infra1"            value="$(arg enable_infra1)"/>
       <arg name="enable_infra2"            value="$(arg enable_infra2)"/>

       <arg name="fisheye_fps"              value="$(arg fisheye_fps)"/>
       <arg name="depth_fps"                value="$(arg depth_fps)"/>
       <arg name="infra_fps"                value="$(arg infra_fps)"/>
       <arg name="color_fps"                value="$(arg color_fps)"/>
       <arg name="gyro_fps"                 value="$(arg gyro_fps)"/>
       <arg name="accel_fps"                value="$(arg accel_fps)"/>
       <arg name="enable_gyro"              value="$(arg enable_gyro)"/>
       <arg name="enable_accel"             value="$(arg enable_accel)"/>
         <arg name="filters"                  value="$(arg filters)"/>
     </include>

     <!--convert Rectified depth image -->
   <node pkg="nodelet" type="nodelet" name="$(arg depth)_metric_rect"
         args="load depth_image_proc/convert_metric $(arg manager) $(arg bond)"
         respawn="$(arg respawn)">
     <remap from="image_raw" to="$(arg depth)/image_rect_raw" />
     <remap from="image"     to="$(arg depth)/image_rect" />
   </node>

   <node pkg="nodelet" type="nodelet" name="$(arg depth)_points"
         args="load depth_image_proc/point_cloud_xyz $(arg manager) $(arg bond)"
         respawn="$(arg respawn)">
     <remap from="image_rect" to="$(arg depth)/image_rect_raw"/>  <!-- Use raw image for efficiency -->
     <remap from="points"     to="/kinect/depth/points" />
   </node>

    <!--  Real robot: Load turtlebot follower into the 3d sensors nodelet manager to avoid pointcloud serializing -->
    <node pkg="nodelet" type="nodelet" name="turtlebot_follower"
          args="load turtlebot_follower/TurtlebotFollower $(arg manager)">
      <remap from="turtlebot_follower/cmd_vel" to="/cmd_vel"/>
      <param name="enabled" value="true" />
      <param name="x_scale" value="10.0" />
      <param name="z_scale" value="5.0" />
      <param name="min_x" value="-0.45" />
      <param name="max_x" value="0.45" />
      <param name="min_y" value="0.1" />
      <param name="max_y" value="0.6" />
      <param name="max_z" value="1.8" />
      <param name="goal_z" value="0.8" />
    </node>

  </group> <!-- camera -->

  <!-- Load reasonable defaults for the relative pose between cameras -->
  <include if="$(arg publish_tf)"
	   file="$(find turtlebot_follower)/launch/kinect_frames.launch">
    <arg name="camera" value="$(arg camera)" />
  </include>

</launch>
